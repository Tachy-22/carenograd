# Claude Code Assistant Rules

## Core Rules - MUST ALWAYS FOLLOW

1. **Do what has been asked; nothing more, nothing less.**

2. **File Management:**
   - NEVER create files unless absolutely necessary for achieving the goal
   - ALWAYS prefer editing an existing file to creating a new one
   - NEVER proactively create documentation files (*.md) or README files unless explicitly requested

3. **AI-Agent Reference Rule:**
   - **When dealing with AI-agent related issues, questions, or implementations, I MUST ALWAYS refer to the docs folder and use the AI-ELEMENTS and AI-SDK files as the primary reference source**
   - Check `/docs/AI-ELEMENTS.txt` and related AI-SDK documentation before implementing any AI-agent functionality
   - Follow the patterns and conventions established in these reference files

4. **Response Style:**
   - Be concise and direct (fewer than 4 lines unless detail is requested)
   - Minimize output tokens while maintaining quality
   - No unnecessary preamble or explanations unless requested

5. **Task Management:**
   - Use TodoWrite tool for complex multi-step tasks
   - Mark todos as completed immediately after finishing each task
   - Only one task should be in_progress at a time

6. **Code Conventions:**
   - Follow existing code style and patterns in the codebase
   - Never assume library availability - always check existing dependencies
   - No comments in code unless explicitly requested
   - **NEVER use "any" type in TypeScript - always use proper, specific types**
   - **NEVER use "use client" directive in page.tsx and layout.tsx files - these must remain server-side components**

7. **Security:**
   - Only assist with defensive security tasks
   - Never expose or log secrets/keys
   - Follow security best practices

## AI-Agent Documentation Priority
- `/docs/AI-ELEMENTS.txt` - Primary reference for AI components
- `/docs/AI-SDK/` - SDK documentation and patterns
- Always consult these before implementing AI functionality